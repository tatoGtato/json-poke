import { Observable } from '../Observable';
import { operate } from '../Subscriber';
import { from } from '../observable/from';
import { noop } from '../util/noop';
export function skipUntil(notifier) {
    return (source) => new Observable((destination) => {
        let taking = false;
        const skipSubscriber = operate({
            destination,
            next: () => {
                skipSubscriber?.unsubscribe();
                taking = true;
            },
            complete: noop,
        });
        from(notifier).subscribe(skipSubscriber);
        source.subscribe(operate({ destination, next: (value) => taking && destination.next(value) }));
    });
}
//# sourceMappingURL=skipUntil.js.map