"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.retryWhen = void 0;
const Observable_1 = require("../Observable");
const from_1 = require("../observable/from");
const Subject_1 = require("../Subject");
const Subscriber_1 = require("../Subscriber");
function retryWhen(notifier) {
    return (source) => new Observable_1.Observable((destination) => {
        let innerSub;
        let syncResub = false;
        let errors$;
        const subscribeForRetryWhen = () => {
            innerSub = source.subscribe((0, Subscriber_1.operate)({
                destination,
                error: (err) => {
                    if (!errors$) {
                        errors$ = new Subject_1.Subject();
                        (0, from_1.from)(notifier(errors$)).subscribe((0, Subscriber_1.operate)({
                            destination,
                            next: () => innerSub ? subscribeForRetryWhen() : (syncResub = true),
                        }));
                    }
                    if (errors$) {
                        errors$.next(err);
                    }
                },
            }));
            if (syncResub) {
                innerSub.unsubscribe();
                innerSub = null;
                syncResub = false;
                subscribeForRetryWhen();
            }
        };
        subscribeForRetryWhen();
    });
}
exports.retryWhen = retryWhen;
//# sourceMappingURL=retryWhen.js.map