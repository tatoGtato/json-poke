"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.single = void 0;
const Observable_1 = require("../Observable");
const EmptyError_1 = require("../util/EmptyError");
const SequenceError_1 = require("../util/SequenceError");
const NotFoundError_1 = require("../util/NotFoundError");
const Subscriber_1 = require("../Subscriber");
function single(predicate) {
    return (source) => new Observable_1.Observable((destination) => {
        let hasValue = false;
        let singleValue;
        let seenValue = false;
        let index = 0;
        source.subscribe((0, Subscriber_1.operate)({
            destination,
            next: (value) => {
                seenValue = true;
                if (!predicate || predicate(value, index++, source)) {
                    hasValue && destination.error(new SequenceError_1.SequenceError('Too many matching values'));
                    hasValue = true;
                    singleValue = value;
                }
            },
            complete: () => {
                if (hasValue) {
                    destination.next(singleValue);
                    destination.complete();
                }
                else {
                    destination.error(seenValue ? new NotFoundError_1.NotFoundError('No matching values') : new EmptyError_1.EmptyError());
                }
            },
        }));
    });
}
exports.single = single;
//# sourceMappingURL=single.js.map