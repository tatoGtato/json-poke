"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bufferToggle = void 0;
const Subscription_1 = require("../Subscription");
const Observable_1 = require("../Observable");
const from_1 = require("../observable/from");
const Subscriber_1 = require("../Subscriber");
const noop_1 = require("../util/noop");
const arrRemove_1 = require("../util/arrRemove");
function bufferToggle(openings, closingSelector) {
    return (source) => new Observable_1.Observable((destination) => {
        const buffers = [];
        (0, from_1.from)(openings).subscribe((0, Subscriber_1.operate)({
            destination,
            next: (openValue) => {
                const buffer = [];
                buffers.push(buffer);
                const closingSubscription = new Subscription_1.Subscription();
                const emitBuffer = () => {
                    (0, arrRemove_1.arrRemove)(buffers, buffer);
                    destination.next(buffer);
                    closingSubscription.unsubscribe();
                };
                closingSubscription.add((0, from_1.from)(closingSelector(openValue)).subscribe((0, Subscriber_1.operate)({ destination, next: emitBuffer, complete: noop_1.noop })));
            },
            complete: noop_1.noop,
        }));
        source.subscribe((0, Subscriber_1.operate)({
            destination,
            next: (value) => {
                for (const buffer of buffers) {
                    buffer.push(value);
                }
            },
            complete: () => {
                while (buffers.length > 0) {
                    destination.next(buffers.shift());
                }
                destination.complete();
            },
        }));
    });
}
exports.bufferToggle = bufferToggle;
//# sourceMappingURL=bufferToggle.js.map